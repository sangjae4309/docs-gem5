{"0": {
    "doc": "Integrate with gem5",
    "title": "Overview",
    "content": "gem5/ ├── configs/ │ | │ └── common/ │ |- MemConfig.py │ |- Options.py │ └─ ... | ├── src/ │ └── mem/ │ |- ramulator2.cc ramualator.hh │ |- Ramulator2.py │ |- SConscript │ └─ ... │ ├── ext/ # not guided in this docs │ └── ramulator2/ │ |- SConscript │ └─ ramulator2/ │ |- src/ │ |- libramulator.so │ └─ ... | Above tree shows overall files which requires modification to integrate gem5 and ramulator2 and its path | . This docs mainly guides only modification on gem5 source files. To set-up ramulator2 local file, please reference to ramulator2 documentation . You can get all complete code at sangjae4309/gem5_ramulator2 . ",
    "url": "/about/#overview",
    
    "relUrl": "/about/#overview"
  },"1": {
    "doc": "Integrate with gem5",
    "title": "Integrate with gem5",
    "content": " ",
    "url": "/about/",
    
    "relUrl": "/about/"
  },"2": {
    "doc": "Prerequisite",
    "title": "Enviorment",
    "content": ". | &gt;= Ubuntu22.04 (due to support on c++23) | c++-12 (apt-get install c++-12) | clang++-15 (apt-get install clang clang++-15) | cmake | gem5 ver.230830 (can be differed) | . ",
    "url": "/prerequisite/#enviorment",
    
    "relUrl": "/prerequisite/#enviorment"
  },"3": {
    "doc": "Prerequisite",
    "title": "Prerequisite",
    "content": " ",
    "url": "/prerequisite/",
    
    "relUrl": "/prerequisite/"
  },"4": {
    "doc": "Adding ramulator config",
    "title": "Introduction",
    "content": ". | Ramulator2 selects the memory types and spec with its configuation file in form of .yaml | Simulating Ramulator2-alone requires option -f(e.g, -f ./example_config.yaml) to load configuration. | However, in gem5, the flag to read ramulator2 configuration file not exists. | This section guides how to manually add new option and connects it to simobject | . ",
    "url": "/ramulator_config/#introduction",
    
    "relUrl": "/ramulator_config/#introduction"
  },"5": {
    "doc": "Adding ramulator config",
    "title": "Add option to parser",
    "content": "# gem5/configs/common/Options.py ... parser.add_argument( \"--ramulator-config\", type=str, dest=\"ramulator_config\", help=\"inputs ramulator configuration file\" ) ... | Now, the option --ramulator-config is added | . ",
    "url": "/ramulator_config/#add-option-to-parser",
    
    "relUrl": "/ramulator_config/#add-option-to-parser"
  },"6": {
    "doc": "Adding ramulator config",
    "title": "Connect the option to Ramulator2 simobject",
    "content": "# gem5/configs/common/MemConfig.py create_mem_intf() ... if issubclass(intf, m5.objects.Ramualator2): if not options.ramulator_config: print(\"--mem-type=Ramulator2 requires options --ramulator-config\") exit(1) interface.config_path = options.ramulator_config ... | interface is an instance of python-defined Ramulator2 class | options.ramualtor_config comes from previous subsection | . # gem5/src/mem/Ramulator2.py from m5.SimObject import * from m5.params import * from m5.objects.AbstractMemory import * class Ramulator2(AbstractMemory): type = \"Ramulator2\" cxx_class = \"gem5::memory::Ramulator2\" cxx_header = \"mem/ramulator2.hh\" port = ResponsePort(\"The port for receiving memory requests and sending responses\") #NOTE newly added to accommodate config file config_path = Param.String(\"\", \"--ramulator-config\") . | Define new varialbe in python class to accommodate the new option | Compiling gem5, param/Ramulator2.hh adds new string variable config_path | . # gem5/src/mem/ramualtor2.hh namespace gem5 { namespace memory { class Ramulator2 : public AbstractMemory { ... private: std::string config_path; ... } }} # gem5/src/mem/ramualtor2.cc Ramulator2::Ramulator2(const Params &amp;p){ // Constructor config_path = p.config_path; YAML::Node config = parse_config(config_path); // this is pseudo-code } . | In wrapper code, you can call the config_path by referencing member variable of Params which comes from param/Ramulator2.hh | . ",
    "url": "/ramulator_config/#connect-the-option-to-ramulator2-simobject",
    
    "relUrl": "/ramulator_config/#connect-the-option-to-ramulator2-simobject"
  },"7": {
    "doc": "Adding ramulator config",
    "title": "Adding ramulator config",
    "content": " ",
    "url": "/ramulator_config/",
    
    "relUrl": "/ramulator_config/"
  },"8": {
    "doc": "Add to Simobject",
    "title": "Introduction",
    "content": ". | gem5 manages memory system in form of simobject | This section describes how to add ramulator2 into simobject system | Add the following codes in your own gem5 | . ",
    "url": "/simobject/#introduction",
    
    "relUrl": "/simobject/#introduction"
  },"9": {
    "doc": "Add to Simobject",
    "title": "Declaring Simobject",
    "content": "# gem5/src/mem/SConscript if env['HAVE_RAMULATOR2']: SimObject(\"Ramulator2.py\", sim_objects=['Ramulator2']) Source(\"ramulator2.cc\") DebugFlag(\"Ramulator2\") . | SimObject(“Ramulator2.py”…): Add class “Ramulator2” as a simobject. | Source(“ramulator2.cc”): compile the predefined c++ wrapper code. | DebugFlag(“Ramulator2”): (optional), add “Ramulator2” as one of gem5 debug flag | . # gem5/src/mem/Ramulator2.py from m5.SimObject import * from m5.params import * from m5.objects.AbstractMemory import * class Ramulator2(AbstractMemory): type = \"Ramulator2\" cxx_class = \"gem5::memory::Ramulator2\" cxx_header = \"mem/ramulator2.hh\" port = ResponsePort(\"The port for receiving memory requests and sending responses\") . | Defines the python class for Ramulator2 | While compiling, gem5 follows cxx_headers path and reach cxx_class instance | . ",
    "url": "/simobject/#declaring-simobject",
    
    "relUrl": "/simobject/#declaring-simobject"
  },"10": {
    "doc": "Add to Simobject",
    "title": "Connecting to dram_intf",
    "content": "# gem5/common/MemConfig.py config_mem() new code ... if issubclass(intf, m5.objects.Ramulator2): mem_ctrl = dram_intf else: mem_ctrl = dram_intf.controller() ... | While the conventional dram class returns dram interface instance by calling function called controller(), Ramulator2 is not | . ",
    "url": "/simobject/#connecting-to-dram_intf",
    
    "relUrl": "/simobject/#connecting-to-dram_intf"
  },"11": {
    "doc": "Add to Simobject",
    "title": "Add to Simobject",
    "content": " ",
    "url": "/simobject/",
    
    "relUrl": "/simobject/"
  },"12": {
    "doc": "gem5 wrapper",
    "title": "TBD",
    "content": " ",
    "url": "/declaring_simobject/#tbd",
    
    "relUrl": "/declaring_simobject/#tbd"
  },"13": {
    "doc": "gem5 wrapper",
    "title": "gem5 wrapper",
    "content": " ",
    "url": "/declaring_simobject/",
    
    "relUrl": "/declaring_simobject/"
  }
}
